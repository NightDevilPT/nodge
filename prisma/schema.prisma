generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Provider {
  GITHUB
  CREDENTIAL
  GOOGLE
}

enum Status {
  PENDING
  RUNNING
  COMPLETED
  FAILED
}

model User {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  username     String
  email        String    @unique
  isVerified   Boolean   @default(false)
  otp          Int?
  otpExpireAt  DateTime?
  provider     Provider  @default(CREDENTIAL)
  password     String?
  refreshToken String?   @default("")
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  profile      Profile?  @relation(name: "ProfileToUser")
}

model Profile {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  firstName   String
  lastName    String
  phoneNumber String?
  avatar      String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  user        User         @relation(name: "ProfileToUser", fields: [userId], references: [id])
  userId      String       @unique @db.ObjectId
  credentials Credential[] @relation(name: "CredentialToProfile")
  workflows   Workflow[]   @relation(name: "WorkflowToProfile")
}

model Credential {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  credentialType   String
  credentialsValue Json
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  profile          Profile  @relation(name: "CredentialToProfile", fields: [profileId], references: [id])
  profileId        String   @db.ObjectId
}

model Workflow {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  description  String?  @default("")
  nodes        Json
  edges        Json
  version      Int      @default(1)
  isDraft      Boolean  @default(false)
  isPublic     Boolean  @default(false)
  sharedWith   String[] @db.ObjectId
  tags         String[]
  category     String?
  status       Status   @default(PENDING)
  lastRunAt    DateTime?
  runCount     Int      @default(0)
  triggerType  String?
  cronSchedule String?
  logs         Json?
  outputs      Json?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  profile      Profile  @relation(name: "WorkflowToProfile", fields: [profileId], references: [id])
  profileId    String   @db.ObjectId
}

